<!DOCTYPE html>
@{
    ViewBag.Title = "PDF Viewer JS";
    Layout = "~/Views/Shared/_LoginPartial.cshtml";
}
@*<br/>*@
@*<h2>PDFViewer</h2>
    <hr/>*@
@*<object data="@Url.Action("GetPDF")" type="application/pdf" width="130%" height="720px">
        alt : <a href="D:\Anuranjan\project\EB\1001AmazingPlaces.pdf">test.pdf</a>
    </object>*@
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>@ViewBag.Title</title>
    @*<script src="//mozilla.github.io/pdf.js/build/pdf.js"></script>*@
    @*<script src="https://mozilla.github.io/pdf.js/build/pdf.js"></script>*@
        @*<script src="https://mozilla.github.io/pdf.js/build/pdf.worker.js"></script>*@
    <script src="~/pdf.js/build/pdf.js"></script>
    <script src="~/pdf.js/build/pdf.worker.js"></script>
    <script type="text/javascript">
        var url = "../../MyPDFs/1001AmazingPlaces.pdf";
        //PDFJS.workerSrc = 'https://mozilla.github.io/pdf.js/build/pdf.worker.js';
        pdfjsLib.GlobalWorkerOptions.workerSrc = "~/pdf.js/build/pdf.worker.js";
        // Asynchronous download of PDF
        //var loadingTask = PDFJS.getDocument(url);
        var loadingTask = pdfjsLib.getDocument(url);
        loadingTask.promise.then(function (pdf) {
            console.log('PDF loaded');

            //    // Fetch the first page
            //    var pageNumber = 1;
            //    pdf.getPage(pageNumber).then(function (page) {
            //        console.log('Page loaded');

            //        var scale = 1.5;
            //       //var viewport = page.getViewport(scale);

            //        // Prepare canvas using PDF page dimensions
            //        var canvas = document.getElementById('the-canvas');
            //        var context = canvas.getContext('2d');
            //        //canvas.height = viewport.height;
            //        //canvas.width = viewport.width;
            //        var viewportWidth = window.innerWidth + "px";
            //        var viewportHeight = window.innerHeight + "px";
            //        canvas.height = viewportHeight;
            //        canvas.width = viewportWidth;

            //        // Render PDF page into canvas context
            //        var renderContext = {
            //            canvasContext: context
            //            //viewport: viewport
            //        };
            //        //var renderTask = page.render(renderContext);
            //        //renderTask.then(function () {
            //        //    console.log('Page rendered');
            //        //});
            //    });
            //}, function (reason) {
            //    // PDF loading error
            //    console.error(reason);
            //});

            //
            // Fetch the first page
            //
            pdf.getPage(1).then(function (page) {
                var scale = 1.5;
                var viewport = page.getViewport({ scale: scale, });

                //
                // Prepare canvas using PDF page dimensions
                //
                var canvas = document.getElementById('the-canvas');
                var context = canvas.getContext('2d');
                canvas.height = viewport.height;
                canvas.width = viewport.width;

                //
                // Render PDF page into canvas context
                //
                var renderContext = {
                    canvasContext: context,
                    viewport: viewport,
                };
                page.render(renderContext);
            });
        });
    </script>
</head>
<body>
    <form id="form1" runat="server">

        <canvas id="the-canvas"></canvas>
    </form>
</body>
</html>
